FROM nvidia/cuda:11.1.1-cudnn8-runtime-ubuntu20.04 AS pro-base-stage

LABEL vendor="qpiai.tech"

# Installing Driver Utils
RUN apt-get update && apt install -y --no-install-recommends software-properties-common

RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    build-essential \
    python3-dev \
    python3-pip \
    python3-venv \
    python3-setuptools \
    libssl-dev\
    curl

RUN apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
    && apt-get clean -y && rm -rf /var/lib/apt/lists/* && apt-get update && apt-get install -y python3-virtualenv


FROM pro-base-stage AS pro-builder-base

ARG ENV_MODE

ENV  \
  # python :
  PYTHONFAULTHANDLER=1 \
  PYTHONHASHSEED=random \
  PYTHONDONTWRITEBYTECODE=1 \
  # pip :
  PIP_NO_CACHE_DIR=off \
  PIP_DISABLE_PIP_VERSION_CHECK=on \
  PIP_DEFAULT_TIMEOUT=100 \
  # poetry:
  POETRY_VERSION=1.1.7 \
  POETRY_HOME="/opt/poetry"\
  POETRY_NO_INTERACTION=1 \
  POETRY_VIRTUALENVS_IN_PROJECT=true \
  POETRY_CACHE_DIR='/var/cache/pypoetry' \
  #Our Project Setup
  PROJECT_PATH="/opt/project-app" \
  VENV_PATH="/opt/project-app/.venv"

ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

#Installing Poetry respects to POETRY_HOME POETRY_VERSION
RUN curl -sSL https://install.python-poetry.org | python3 -

RUN apt-get -y install libsndfile1

# COPY requirements to docker image
WORKDIR ${PROJECT_PATH}

COPY poetry.lock pyproject.toml ./

RUN poetry config repositories.foo https://gitlab.qpiai.tech/api/v4/projects/4/packages/pypi/simple

RUN poetry config http-basic.foo dev sFqNp8z7mfaqCz5mM2V7

# Project initialization:
RUN poetry version \
    && poetry install --no-dev \
        --no-interaction --no-ansi \
    # Upgrading pip, it is insecure, remove after `pip@21.1`
    && poetry run pip install -U pip \
    # Cleaning poetry installation's cache for production:
    && if [ "$ENV_MODE" = 'production' ]; then rm -rf "$POETRY_CACHE_DIR"; fi

FROM pro-builder-base as pro-development

ENV FASTAPI_ENV=development

WORKDIR ${PROJECT_PATH}

COPY --from=pro-builder-base ${POETRY_HOME} ${POETRY_HOME}
COPY --from=pro-builder-base ${PROJECT_PATH} ${PROJECT_PATH}


RUN poetry install 


WORKDIR /qpiai-app

COPY . /qpiai-app/

ENV PYTHONPATH=/qpiai-app

CMD ["python3", "app/main.py"]
